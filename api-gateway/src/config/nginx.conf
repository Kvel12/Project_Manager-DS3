
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging Settings
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log warn;

    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Upstream Services
    upstream auth_service {
        server auth-service:3001;
        keepalive 32;
    }

    upstream project_service {
        server project-service:3002;
        keepalive 32;
    }

    upstream payment_service {
        server payment-service:3003;
        keepalive 32;
    }

    upstream support_service {
        server support-service:3004;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;

        # CORS Configuration
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-auth-token' always;

        # Options preflight request
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Auth Service Routes
        location /api/auth/ {
            limit_req zone=api_limit burst=5;
            proxy_pass http://auth_service/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Project Service Routes
        location /api/projects/ {
            auth_request /auth/validate;
            limit_req zone=api_limit burst=5;
            proxy_pass http://project_service/projects/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Payment Service Routes
        location /api/payments/ {
            auth_request /auth/validate;
            limit_req zone=api_limit burst=5;
            proxy_pass http://payment_service/payments/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Support Service Routes
        location /api/support/ {
            auth_request /auth/validate;
            limit_req zone=api_limit burst=5;
            proxy_pass http://support_service/support/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Health Check
        location /health {
            access_log off;
            return 200 'healthy\n';
        }

        # Error Pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}